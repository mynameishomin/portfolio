"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    axesModifier: function() {
        return axesModifier;
    },
    nameModifier: function() {
        return nameModifier;
    },
    signModifier: function() {
        return signModifier;
    },
    addDurationWithGravity: function() {
        return addDurationWithGravity;
    }
});
var _flatten = /*#__PURE__*/ _interop_require_default(require("lodash/flatten"));
var _forEach = /*#__PURE__*/ _interop_require_default(require("lodash/forEach"));
var _isPlainObject = /*#__PURE__*/ _interop_require_default(require("lodash/isPlainObject"));
var _isString = /*#__PURE__*/ _interop_require_default(require("lodash/isString"));
var _isUndefined = /*#__PURE__*/ _interop_require_default(require("lodash/isUndefined"));
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
var axesModifier = function(axes, silentModifier) {
    var safeAxes = (0, _isUndefined.default)(axes) ? [
        "x",
        "y",
        "z"
    ] : (0, _flatten.default)([
        axes
    ]);
    var safeSilentModifier = (0, _isUndefined.default)(silentModifier) ? "1" : silentModifier;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        (0, _forEach.default)(safeAxes, function(axis) {
            var property = String(modifier) === String(safeSilentModifier) ? axis : "".concat(axis, "-").concat(modifier);
            result[property] = (0, _isPlainObject.default)(value) ? _object_spread({
                axis: axis,
                originalModifier: modifier
            }, value) : {
                axis: axis,
                originalModifier: modifier,
                value: value
            };
        });
    };
};
var nameModifier = function(name, silentModifier) {
    var safeName = (0, _isString.default)(name) ? name : "";
    var safeSilentModifier = (0, _isString.default)(silentModifier) ? silentModifier : safeName === "" // If there is no name, don't silence the modifier
     ? "" : "1";
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        var property = String(modifier) === safeSilentModifier ? safeName : safeName === "" ? modifier : "".concat(safeName, "-").concat(modifier);
        result[property] = (0, _isPlainObject.default)(value) ? _object_spread({
            name: name,
            originalModifier: modifier
        }, value) : {
            name: name,
            originalModifier: modifier,
            value: value
        };
    };
};
var signModifier = function(signs) {
    var safeSigns = (0, _isUndefined.default)(signs) ? [
        "",
        "-"
    ] : (0, _flatten.default)([
        signs
    ]);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        (0, _forEach.default)(safeSigns, function(sign) {
            result["".concat(sign).concat(modifier)] = (0, _isPlainObject.default)(value) ? _object_spread({
                sign: sign,
                originalModifier: modifier
            }, value) : {
                sign: sign,
                originalModifier: modifier,
                value: value
            };
        });
    };
};
var addDurationWithGravity = function() {
    return(// eslint-disable-next-line @typescript-eslint/no-explicit-any
    function(result, value, modifier) {
        var _value_originalModifier;
        var duration = Math.pow(Number((_value_originalModifier = value.originalModifier) !== null && _value_originalModifier !== void 0 ? _value_originalModifier : modifier), 0.25).toFixed(2);
        result[modifier] = (0, _isPlainObject.default)(value) ? _object_spread({
            duration: duration,
            originalModifier: modifier
        }, value) : {
            duration: duration,
            originalModifier: modifier,
            value: value
        };
    });
};
