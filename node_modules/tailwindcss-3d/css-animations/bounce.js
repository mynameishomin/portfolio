"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Bounce", {
    enumerable: true,
    get: function() {
        return Bounce;
    }
});
var _lodash = require("lodash");
var _every = /*#__PURE__*/ _interop_require_default(require("lodash/every"));
var _isArray = /*#__PURE__*/ _interop_require_default(require("lodash/isArray"));
var _isPlainObject = /*#__PURE__*/ _interop_require_default(require("lodash/isPlainObject"));
var _isString = /*#__PURE__*/ _interop_require_default(require("lodash/isString"));
var _isUndefined = /*#__PURE__*/ _interop_require_default(require("lodash/isUndefined"));
var _keys = /*#__PURE__*/ _interop_require_default(require("lodash/keys"));
var _values = /*#__PURE__*/ _interop_require_default(require("lodash/values"));
var _defaultTheme = /*#__PURE__*/ _interop_require_default(require("tailwindcss/defaultTheme"));
var _base = require("./base");
var _transform = require("../css-utilities/transform");
var _translate = require("../css-utilities/translate");
var _cssvalue = require("../utils/css-value");
var _generateguard = require("../utils/generate-guard");
var _lodashtransformers = require("../utils/lodash-transformers");
function _array_like_to_array(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
function _array_with_holes(arr) {
    if (Array.isArray(arr)) return arr;
}
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _iterable_to_array_limit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally{
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally{
            if (_d) throw _e;
        }
    }
    return _arr;
}
function _non_iterable_rest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _sliced_to_array(arr, i) {
    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _unsupported_iterable_to_array(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _array_like_to_array(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(n);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
var Bounce = /*#__PURE__*/ function(Base) {
    "use strict";
    _inherits(Bounce, Base);
    var _super = _create_super(Bounce);
    function Bounce() {
        _class_call_check(this, Bounce);
        var _this;
        _this = _super.apply(this, arguments);
        _define_property(_assert_this_initialized(_this), "isProcessablePrimitive", (0, _generateguard.generateGuard)(_isString.default, _isUndefined.default));
        _define_property(_assert_this_initialized(_this), "isProcessableValue", (0, _generateguard.generateGuard)([
            _isArray.default,
            function(maybe) {
                return maybe.length === 2;
            },
            function(maybe) {
                return (0, _every.default)((0, _values.default)(maybe), _this.isProcessablePrimitive);
            }
        ]));
        _define_property(_assert_this_initialized(_this), "isProcessableValues", (0, _generateguard.generateGuard)([
            _isPlainObject.default,
            function(maybe) {
                return (0, _every.default)((0, _keys.default)(maybe), _isString.default);
            },
            function(maybe) {
                return (0, _every.default)((0, _values.default)(maybe), _this.isProcessableValue);
            }
        ]));
        _define_property(_assert_this_initialized(_this), "normaliseValues", function(values) {
            return _this.isProcessableValues(values) ? (0, _lodash.chain)(values).mapKeys(function(_value, modifier) {
                return (0, _cssvalue.normaliseNumberValue)(modifier);
            }).mapValues(function(param) {
                var _param = _sliced_to_array(param, 2), duration = _param[0], distance = _param[1];
                return [
                    (0, _cssvalue.normaliseTimeValue)(duration),
                    (0, _cssvalue.normaliseLengthPercentageValue)(distance)
                ];
            }).pickBy(function(value, modifier) {
                var _value = _sliced_to_array(value, 2), duration = _value[0], distance = _value[1];
                return (0, _isString.default)(modifier) && modifier !== "" && modifier !== "px" && (0, _isString.default)(duration) && (0, _isString.default)(distance);
            }).value() : {};
        });
        _define_property(_assert_this_initialized(_this), "defaultTheme", _this.normaliseValues((0, _lodash.chain)(_defaultTheme.default.spacing).transform((0, _lodashtransformers.addDurationWithGravity)(), {}).mapValues(function(param) {
            var distance = param.value, duration = param.duration;
            return [
                duration,
                distance
            ];
        }).value()));
        _define_property(_assert_this_initialized(_this), "keyframes", function(param) {
            var theme = param.theme;
            var values = _this.normaliseValues(theme("bounce"));
            var translateDeclarations = function(axis, value) {
                var translateProperty = "translate".concat(axis.toUpperCase());
                if (!_this.legacy) {
                    return {
                        translate: _translate.Translate.normaliseFunctionValues(_define_property({}, translateProperty, value))
                    };
                }
                var transformValue = _transform.Transform.normaliseLegacyFunctionValues(_define_property({}, translateProperty, value));
                return {
                    "--webkit-transform": transformValue,
                    transform: transformValue
                };
            };
            return (0, _lodash.chain)(values).transform((0, _lodashtransformers.axesModifier)(), {}).transform((0, _lodashtransformers.nameModifier)("bounce"), {}).transform((0, _lodashtransformers.signModifier)(), {}).mapValues(function(param) {
                var _param_value = _sliced_to_array(param.value, 2), _duration = _param_value[0], distance = _param_value[1], axis = param.axis, sign = param.sign;
                return {
                    "0%, 100%": _object_spread_props(_object_spread({}, translateDeclarations(axis, "".concat(sign).concat(distance))), {
                        animationTimingFunction: "cubic-bezier(0.5, 0, 1, 1)"
                    }),
                    "50%": _object_spread_props(_object_spread({}, translateDeclarations(axis, "0")), {
                        animationTimingFunction: "cubic-bezier(0, 0, 0.5, 1)"
                    })
                };
            }).value();
        });
        _define_property(_assert_this_initialized(_this), "animation", function(param) {
            var theme = param.theme;
            var values = _this.normaliseValues(theme("bounce"));
            return (0, _lodash.chain)(values).transform((0, _lodashtransformers.axesModifier)(), {}).transform((0, _lodashtransformers.nameModifier)("bounce"), {}).transform((0, _lodashtransformers.signModifier)(), {}).mapValues(function(param, modifier) {
                var _param_value = _sliced_to_array(param.value, 1), duration = _param_value[0];
                return "".concat(modifier, " ").concat(duration, " infinite");
            }).value();
        });
        return _this;
    }
    return Bounce;
}(_base.Base);
