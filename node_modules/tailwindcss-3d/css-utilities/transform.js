"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Transform", {
    enumerable: true,
    get: function() {
        return Transform;
    }
});
var _lodash = require("lodash");
var _every = /*#__PURE__*/ _interop_require_default(require("lodash/every"));
var _isPlainObject = /*#__PURE__*/ _interop_require_default(require("lodash/isPlainObject"));
var _isString = /*#__PURE__*/ _interop_require_default(require("lodash/isString"));
var _isUndefined = /*#__PURE__*/ _interop_require_default(require("lodash/isUndefined"));
var _keys = /*#__PURE__*/ _interop_require_default(require("lodash/keys"));
var _values = /*#__PURE__*/ _interop_require_default(require("lodash/values"));
var _base = require("./base");
var _cssvalue = require("../utils/css-value");
var _dimension = require("../utils/dimension");
var _generateguard = require("../utils/generate-guard");
function _assert_this_initialized(self) {
    if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
}
function _class_call_check(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _get_prototype_of(o) {
    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _get_prototype_of(o);
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _set_prototype_of(subClass, superClass);
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}
function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        if (enumerableOnly) {
            symbols = symbols.filter(function(sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            });
        }
        keys.push.apply(keys, symbols);
    }
    return keys;
}
function _object_spread_props(target, source) {
    source = source != null ? source : {};
    if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
        ownKeys(Object(source)).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}
function _possible_constructor_return(self, call) {
    if (call && (_type_of(call) === "object" || typeof call === "function")) {
        return call;
    }
    return _assert_this_initialized(self);
}
function _set_prototype_of(o, p) {
    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _set_prototype_of(o, p);
}
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
function _is_native_reflect_construct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}
function _create_super(Derived) {
    var hasNativeReflectConstruct = _is_native_reflect_construct();
    return function _createSuperInternal() {
        var Super = _get_prototype_of(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _get_prototype_of(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else {
            result = Super.apply(this, arguments);
        }
        return _possible_constructor_return(this, result);
    };
}
var Transform = /*#__PURE__*/ function(Base) {
    "use strict";
    _inherits(Transform, Base);
    var _super = _create_super(Transform);
    function Transform() {
        _class_call_check(this, Transform);
        var _this;
        _this = _super.apply(this, arguments);
        _define_property(_assert_this_initialized(_this), "isProcessableValue", (0, _generateguard.generateGuard)(_isString.default, _isUndefined.default));
        _define_property(_assert_this_initialized(_this), "isProcessableValues", (0, _generateguard.generateGuard)([
            _isPlainObject.default,
            function(maybe) {
                return (0, _every.default)((0, _keys.default)(maybe), _isString.default);
            },
            function(maybe) {
                return (0, _every.default)((0, _values.default)(maybe), _this.isProcessableValue);
            }
        ]));
        _define_property(_assert_this_initialized(_this), "normaliseValues", function(values) {
            return _this.isProcessableValues(values) ? (0, _lodash.chain)(values).mapValues(function(angle) {
                return (0, _cssvalue.normaliseAngleValue)(angle);
            }).pickBy(function(angle, modifier) {
                return (0, _isString.default)(modifier) && modifier !== "" && (0, _isString.default)(angle);
            }).value() : {};
        });
        _define_property(_assert_this_initialized(_this), "utilities", function() {
            var rotateValues = _this.normaliseValues(_this.api.theme("rotate"));
            var skewValues = _this.normaliseValues(_this.api.theme("skew"));
            var transformDeclarations = _this.legacy ? Transform.legacyDeclarations() : Transform.declarations();
            _this.api.matchUtilities({
                rotate: function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-rotate-z": value
                    }, _this.legacy ? transformDeclarations : {
                        rotate: "var(--tw-rotate-z)"
                    });
                },
                "rotate-x": function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-rotate-x": value
                    }, transformDeclarations);
                },
                "rotate-y": function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-rotate-y": value
                    }, transformDeclarations);
                },
                "rotate-z": function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-rotate-z": value
                    }, _this.legacy ? transformDeclarations : {
                        rotate: "var(--tw-rotate-z)"
                    });
                }
            }, {
                values: rotateValues,
                supportsNegativeValues: true
            });
            _this.api.matchUtilities({
                "skew-x": function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-skew-x": value
                    }, transformDeclarations);
                },
                "skew-y": function(value) {
                    return _object_spread({
                        "@defaults transform": {},
                        "--tw-skew-y": value
                    }, transformDeclarations);
                }
            }, {
                values: skewValues,
                supportsNegativeValues: true
            });
        });
        return _this;
    }
    return Transform;
}(_base.Base);
_define_property(Transform, "defaultFunctionValues", {
    rotateX: "var(--tw-rotate-x)",
    rotateY: "var(--tw-rotate-y)",
    skewX: "var(--tw-skew-x)",
    skewY: "var(--tw-skew-y)"
});
_define_property(Transform, "defaultLegacyFunctionValues", _object_spread_props(_object_spread({}, Transform.defaultFunctionValues), {
    translateX: "var(--tw-translate-x)",
    translateY: "var(--tw-translate-y)",
    translateZ: "var(--tw-translate-z)",
    rotateZ: "var(--tw-rotate-z)",
    scaleX: "var(--tw-scale-x)",
    scaleY: "var(--tw-scale-y)",
    scaleZ: "var(--tw-scale-z)",
    perspective: "var(--tw-perspective)"
}));
_define_property(Transform, "normaliseFunctionValues", function() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, dimension = _ref.dimension, rotateX = _ref.rotateX, rotateY = _ref.rotateY, skewX = _ref.skewX, skewY = _ref.skewY;
    var safeDimension = (0, _dimension.normaliseDimension)(dimension);
    var safeValues = {
        rotateX: (0, _cssvalue.normaliseAngleValue)(rotateX, Transform.defaultFunctionValues.rotateX),
        rotateY: (0, _cssvalue.normaliseAngleValue)(rotateY, Transform.defaultFunctionValues.rotateY),
        skewX: (0, _cssvalue.normaliseAngleValue)(skewX, Transform.defaultFunctionValues.skewX),
        skewY: (0, _cssvalue.normaliseAngleValue)(skewY, Transform.defaultFunctionValues.skewY)
    };
    return [
        {
            "3d": "rotateX(".concat(safeValues.rotateX, ") rotateY(").concat(safeValues.rotateY, ")"),
            "2d": ""
        },
        "skewX(".concat(safeValues.skewX, ")"),
        "skewY(".concat(safeValues.skewY, ")")
    ].map(function(value) {
        return (0, _isString.default)(value) ? value : value[safeDimension];
    }).filter(function(value) {
        return value !== "";
    }).join(" ");
});
_define_property(Transform, "normaliseLegacyFunctionValues", function() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, dimension = _ref.dimension, translateX = _ref.translateX, translateY = _ref.translateY, translateZ = _ref.translateZ, rotateX = _ref.rotateX, rotateY = _ref.rotateY, rotateZ = _ref.rotateZ, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, scaleZ = _ref.scaleZ, perspective = _ref.perspective;
    var safeDimension = (0, _dimension.normaliseDimension)(dimension);
    var safeValues = {
        translateX: (0, _cssvalue.normaliseLengthPercentageValue)(translateX, Transform.defaultLegacyFunctionValues.translateX),
        translateY: (0, _cssvalue.normaliseLengthPercentageValue)(translateY, Transform.defaultLegacyFunctionValues.translateY),
        translateZ: (0, _cssvalue.normaliseLengthPercentageValue)(translateZ, Transform.defaultLegacyFunctionValues.translateZ),
        rotateX: (0, _cssvalue.normaliseAngleValue)(rotateX, Transform.defaultLegacyFunctionValues.rotateX),
        rotateY: (0, _cssvalue.normaliseAngleValue)(rotateY, Transform.defaultLegacyFunctionValues.rotateY),
        rotateZ: (0, _cssvalue.normaliseAngleValue)(rotateZ, Transform.defaultLegacyFunctionValues.rotateZ),
        skewX: (0, _cssvalue.normaliseAngleValue)(skewX, Transform.defaultLegacyFunctionValues.skewX),
        skewY: (0, _cssvalue.normaliseAngleValue)(skewY, Transform.defaultLegacyFunctionValues.skewY),
        scaleX: (0, _cssvalue.normaliseNumberPercentageValue)(scaleX, Transform.defaultLegacyFunctionValues.scaleX, {
            lowerLimit: 0
        }),
        scaleY: (0, _cssvalue.normaliseNumberPercentageValue)(scaleY, Transform.defaultLegacyFunctionValues.scaleY, {
            lowerLimit: 0
        }),
        scaleZ: (0, _cssvalue.normaliseNumberPercentageValue)(scaleZ, Transform.defaultLegacyFunctionValues.scaleZ, {
            lowerLimit: 0
        }),
        perspective: (0, _cssvalue.normaliseLengthValue)(perspective, Transform.defaultLegacyFunctionValues.perspective)
    };
    return [
        {
            "3d": "translate3d(".concat(safeValues.translateX, ", ").concat(safeValues.translateY, ", ").concat(safeValues.translateZ, ")"),
            "2d": "translate(".concat(safeValues.translateX, ", ").concat(safeValues.translateY, ")")
        },
        {
            "3d": "rotateX(".concat(safeValues.rotateX, ") rotateY(").concat(safeValues.rotateY, ") rotateZ(").concat(safeValues.rotateZ, ")"),
            "2d": "rotate(".concat(safeValues.rotateZ, ")")
        },
        "skewX(".concat(safeValues.skewX, ")"),
        "skewY(".concat(safeValues.skewY, ")"),
        "scaleX(".concat(safeValues.scaleX, ")"),
        "scaleY(".concat(safeValues.scaleY, ")"),
        {
            "3d": "scaleZ(".concat(safeValues.scaleZ, ")"),
            "2d": ""
        },
        {
            "3d": "perspective(".concat(safeValues.perspective, ")"),
            "2d": ""
        }
    ].map(function(value) {
        return (0, _isString.default)(value) ? value : value[safeDimension];
    }).filter(function(value) {
        return value !== "";
    }).join(" ");
});
_define_property(Transform, "declarations", function() {
    var values = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var functionValues = Transform.normaliseFunctionValues(values);
    return {
        "--webkit-transform": functionValues,
        transform: functionValues
    };
});
_define_property(Transform, "legacyDeclarations", function() {
    var values = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var functionValues = Transform.normaliseLegacyFunctionValues(values);
    return {
        "--webkit-transform": functionValues,
        transform: functionValues
    };
});
